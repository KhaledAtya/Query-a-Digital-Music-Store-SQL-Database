<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/m3ael/Desktop/Data Analysis/Data Analysis Advanced/Projects/Project SQL/Project Chinook/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="5283"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainAlbum"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">/*?*/
WITH categ AS (
SELECT TrackId, Milliseconds, CASE
			WHEN t.Milliseconds &lt;
				(SELECT (AVG(Milliseconds)-MIN(Milliseconds))/2
				FROM Track) THEN 'Short'
			WHEN t.Milliseconds &lt;
				(SELECT (MAX(Milliseconds)-AVG(Milliseconds))/2
				FROM Track) THEN 'Medium'
			WHEN t.Milliseconds &lt;
				(SELECT MAX(Milliseconds)
				FROM Track) THEN 'Long'
				END AS LengthCateg
FROM Track t)

SELECT CASE WHEN c.LengthCateg = 'Short' THEN (SELECT ROUND(MIN(Milliseconds/60000),2) FROM Track)
			WHEN c.LengthCateg = 'Medium' THEN (SELECT ROUND(((AVG(Milliseconds)-MIN(Milliseconds))/2)/60000,2) FROM Track)
			WHEN c.LengthCateg = 'Long' THEN (SELECT ROUND(((MAX(Milliseconds)-AVG(Milliseconds))/2)/60000,2) FROM Track)
	   END AS From_Minutes,
	   CASE WHEN c.LengthCateg = 'Short' THEN (SELECT ROUND(((AVG(Milliseconds)-MIN(Milliseconds))/2)/60000,2) FROM Track)
			WHEN c.LengthCateg = 'Medium' THEN (SELECT ROUND(((MAX(Milliseconds)-AVG(Milliseconds))/2)/60000,2) FROM Track)
			WHEN c.LengthCateg = 'Long' THEN (SELECT ROUND(MAX(Milliseconds/60000),2) FROM Track)
	   END AS To_Minutes,
	   c.LengthCateg,
	   ROUND(SUM(i.UnitPrice*i.Quantity),2) AS TotalPrice
FROM categ c
JOIN InvoiceLine i ON c.TrackId = i.TrackId
GROUP BY 3
HAVING c.LengthCateg IS NOT Null
ORDER BY 4	

</sql><current_tab id="0"/></tab_sql></sqlb_project>
